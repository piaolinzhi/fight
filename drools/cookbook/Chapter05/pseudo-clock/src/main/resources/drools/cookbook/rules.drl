package drools.cookbook;

import drools.cookbook.model.FlightStatus
import drools.cookbook.model.FlightControl
import drools.cookbook.model.EmergencySignal

import drools.cookbook.helper.EmergencySystem

global drools.cookbook.model.FlightControl control;

declare FlightStatus
    @role(event)
end

declare EmergencySignal
    @role(event)
end

rule "First contact"
salience 100
when
    $currentFlight : FlightStatus() from entry-point "flight-control"
    not (exists (FlightStatus(this != $currentFlight, flight == $currentFlight.flight) from entry-point "flight-control"))
then
    control.addFlight($currentFlight);
    System.out.println("First contact with Flight " + $currentFlight.getFlight());
end


rule "flight arrival"
when
    $flight : FlightStatus() from entry-point "flight-arrival"
    // Obtain resources to prepare the flight landing
then
    System.out.println("Flight " + $flight.getFlight() + " arriving to " + control.getAirport() + ". Sending instructions");
    // Send instructions to arriving flight
end

rule "emergency system"
when
    $emergency : EmergencySignal() from entry-point "emergency-channel"
    FlightStatus(flight==$emergency.flight, this before[0m, 10m] $emergency) from entry-point "flight-arrival"
then
    // Emergency in curse
    System.out.println("Emergency in progress. Flight " + $emergency.getFlight());
    EmergencySystem.sendFireTrucks();
    EmergencySystem.sendAmbulances();
    EmergencySystem.cleanRunways();
end